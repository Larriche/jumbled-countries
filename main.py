from jumble import *   # ui class generated by QtDesigner

import sys             # for system stuff
import random          # generating random numbers 


class JumbleGame(QtGui.QMainWindow):
    def __init__(self):
        QtGui.QWidget.__init__(self)
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)

        self.countries = []
        self.curr = None

        self.maxPlays = 50
        self.playsSoFar = 0

        self.loadCountries()
        self.displayCountry()

        # binding events to methods
        self.ui.continueBttn.clicked.connect(self.checkAnswer)
        self.ui.playerText.returnPressed.connect(self.checkAnswer)

    def loadCountries(self):
        fileObj = open("countries.txt","r")
        lines = fileObj.readlines()
        fileObj.close()

        lines = [ line.rstrip("\n") for line in lines ]
        self.countries = lines

    def generateJumble(self,country):
        copy = country
        jumbled = ""
        
        while len(jumbled) < len(country):
            letterPos = random.randrange(len(copy))
            jumbled += copy[letterPos]
            copy = copy[0:letterPos] + copy[(letterPos+1):(len(copy))]

        return jumbled
            
    def displayCountry(self):
        countryPos = random.randrange(len(self.countries))
        chosenCountry = self.countries[countryPos]
        self.curr = chosenCountry

        self.countries.remove(chosenCountry)
        jumble = self.generateJumble(chosenCountry)

        while jumble == chosenCountry:
            jumble = self.generateJumble(chosenCountry)
            
        self.ui.jumbleLabel.setText(jumble)
        self.ui.playerText.clear()
        self.playsSoFar += 1

    def checkAnswer(self):
        if self.curr.lower() == str(self.ui.playerText.text()).lower():
            self.ui.feedbackLabel.setText("Correct")
            self.updateScore()
        else:
            self.ui.feedbackLabel.setText("Wrong")

        if self.playsSoFar < self.maxPlays:
            self.displayCountry()
        else:
            self.ui.jumbleLabel.setText("Thanks for playing")

    def updateScore(self):
        scoreText = self.ui.scoreLabel.text()
        score = int(scoreText.split(" ")[1])
        score += 10

        self.ui.scoreLabel.setText("Score: "+str(score))
    

if __name__ == "__main__":
    app = QtGui.QApplication(sys.argv)
    jumble = JumbleGame()
    jumble.show()
    sys.exit(app.exec_())
